// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/api.go
//
// Generated by this command:
//
//	mockgen -source=internal/services/api.go -destination=internal/services/mocks/mock_api.go
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockApiService is a mock of ApiService interface.
type MockApiService struct {
	ctrl     *gomock.Controller
	recorder *MockApiServiceMockRecorder
}

// MockApiServiceMockRecorder is the mock recorder for MockApiService.
type MockApiServiceMockRecorder struct {
	mock *MockApiService
}

// NewMockApiService creates a new mock instance.
func NewMockApiService(ctrl *gomock.Controller) *MockApiService {
	mock := &MockApiService{ctrl: ctrl}
	mock.recorder = &MockApiServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiService) EXPECT() *MockApiServiceMockRecorder {
	return m.recorder
}

// ApplyRoutes mocks base method.
func (m *MockApiService) ApplyRoutes() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ApplyRoutes")
}

// ApplyRoutes indicates an expected call of ApplyRoutes.
func (mr *MockApiServiceMockRecorder) ApplyRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyRoutes", reflect.TypeOf((*MockApiService)(nil).ApplyRoutes))
}

// Init mocks base method.
func (m *MockApiService) Init(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockApiServiceMockRecorder) Init(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockApiService)(nil).Init), ctx)
}

// Shutdown mocks base method.
func (m *MockApiService) Shutdown(ctx context.Context, sig string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Shutdown", ctx, sig)
}

// Shutdown indicates an expected call of Shutdown.
func (mr *MockApiServiceMockRecorder) Shutdown(ctx, sig any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shutdown", reflect.TypeOf((*MockApiService)(nil).Shutdown), ctx, sig)
}
